–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ { joinVoiceChannel, VoiceConnectionStatus } = –¢—Ä–µ–±–æ–≤–∞—Ç('@–¥–∏—Å–∫–æ—Ä–¥–¥–∂—Å/–≥–æ–ª–æ—Å');
–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ { EmbedBuilder } = –¢—Ä–µ–±–æ–≤–∞—Ç('–¥–∏—Å–∫–æ—Ä–¥.js');
–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ { dequeue, playNextSong, playSong } = –¢—Ä–µ–±–æ–≤–∞—Ç('./–∏–≥—Ä–∞—Ç—å');
–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ { queue } = –¢—Ä–µ–±–æ–≤–∞—Ç('./–∏–≥—Ä–∞—Ç—å');

–º–æ–¥—É–ª—å.—ç–∫—Å–ø–æ—Ä—Ç = {
  –ò–º—è: '–ø—Ä–æ–ø—É—Å–∫–∞—Ç—å',
  –û–ø–∏—Å–∞–Ω–∏–µ: '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–µ—Å–Ω—é',
  –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π execute(—Å–æ–æ–±—â–µ–Ω–∏–µ, –∞—Ä–≥—É–º–µ–Ω—Ç—ã) {
    –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ voiceChannel = —Å–æ–æ–±—â–µ–Ω–∏–µ.—á–ª–µ–Ω.–ì–æ–ª–æ—Å.–ö–∞–Ω–∞–ª;
    –ï–°–õ–ò (!–≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª) {
      –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ embed = –Ω–æ–≤—ã–π EmbedBuilder()
        .setColor('#—Ñ—Ñ0000')
        .setDescription('üêº –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.!');
      –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ.–û—Ç–≤–µ—á–∞—Ç—å({ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç: [–≤—Å—Ç–∞–≤–ª—è—Ç—å] });
    }

    –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ connection = –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É({
      –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞–Ω–∞–ª: –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª.–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä,
      –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥–∏–ª—å–¥–∏–∏: —Å–æ–æ–±—â–µ–Ω–∏–µ.–≥–∏–ª—å–¥–∏—è.–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä,
      –ê–¥–∞–ø—Ç–µ—Ä–°–æ–∑–¥–∞—Ç–µ–ª—å: —Å–æ–æ–±—â–µ–Ω–∏–µ.–≥–∏–ª—å–¥–∏—è.–≥–æ–ª–æ—Å–æ–≤–æ–π –ê–¥–∞–ø—Ç–µ—Ä–°–æ–∑–¥–∞—Ç–µ–ª—å,
    });

    –ï–°–õ–ò (—Å–≤—è–∑—å.—Å–æ—Å—Ç–æ—è–Ω–∏–µ.–ü–æ–ª–æ–∂–µ–Ω–∏–µ –¥–µ–ª–∞ === –°—Ç–∞—Ç—É—Å –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è.–ì–æ—Ç–æ–≤—ã–π) {
      –ï–°–õ–ò (–æ—á–µ—Ä–µ–¥—å.–¥–ª–∏–Ω–∞ > 0) {
        –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ nextSong = —Å–Ω–∏–º–∞—Ç—å —Å –æ—á–µ—Ä–µ–¥—å();
        –ñ–¥–∏—Ç–µ –ò–≥—Ä–∞—Ç—å –ø–µ—Å–Ω—è(—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, —Å–ª–µ–¥—É—é—â–∞—è –ø–µ—Å–Ω—è.–ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å, –°–ª–µ–¥—É—é—â–∞—è –ø–µ—Å–Ω—è.—Å–æ–æ–±—â–µ–Ω–∏–µ);

        –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ embed = –Ω–æ–≤—ã–π EmbedBuilder()
           .setColor('#2b71ec')
     .setAuthor({
          –ò–º—è: '–ü—Ä–æ–ø—É—â–µ–Ω–Ω–∞—è –ø–µ—Å–Ω—è!',
          –∑–Ω–∞—á–æ–∫URL: 'https://cdn.discordapp.com/attachments/1175488636033175602/1175488721253052426/right-chevron-.png?ex=656b6a2e&amp;is=6558f52e&amp;hm=7a73aa51cb35f25eba52055c7b4a1b56bb f3a6d150643adc15b52dc533236956&',
          URL: 'https://discord.gg/FUEHs7RCqz'
        })
          .setDescription('**–ø–æ–∑–≤–æ–ª—è—Ç—å\'–ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ç–∞–∫—Ç—É...**');
        –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ.–û—Ç–≤–µ—á–∞—Ç—å({ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç: [–≤—Å—Ç–∞–≤–ª—è—Ç—å] });
      } –µ—â–µ {
        –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ embed = –Ω–æ–≤—ã–π EmbedBuilder()
          .setColor('#FFFF00')
          .setDescription('**‚ùå No songs in the queue to skip.**');
        return message.reply({ embeds: [embed] });
      }
    } else {
      const embed = new EmbedBuilder()
        .setColor('#FF0000')
        .setDescription('**‚ùå There is no song to skip. Queue is empty.**');
      return message.reply({ embeds: [embed] });
    }
  },
};
